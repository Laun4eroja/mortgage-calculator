{"version":3,"sources":["model.js","utils/formatters.js","view/updateResultsView.js","utils/updateModel.js","view/radioPrograms.js","view/utils.js","view/costInput.js","view/costRange.js","view/paymentInput.js","view/paymentRange.js","view/timeInput.js","view/timeRange.js","controller.js"],"names":["data","selectedProgram","cost","minPrice","maxPrice","minPaymentPercents","maxPaymentPercents","paymentPercents","payment","getMinPayment","getMaxPayment","minYear","maxYear","time","programs","base","it","gov","zero","results","rate","getData","_objectSpread","getResults","setData","newData","console","log","onUpdate","id","months","totalAmount","monthRate","generalRate","Math","pow","monthPayment","overPayment","priceFormatter","exports","Intl","NumberFormat","style","currency","maximumFractionDigits","priceFormatterDecimals","_formatters","require","updateResultsView","document","querySelector","innerHTML","format","_default","default","updateModel","element","dispatchEvent","CustomEvent","bubbles","detail","_updateModel","_interopRequireDefault","obj","__esModule","init","radioBtns","querySelectorAll","_getData$programs","value","innerText","forEach","radioBtn","addEventListener","parseFloat","updateMinPercents","input","cleaveInput","Cleave","numeral","numeralThousandsGroupStyle","delimiter","setRawValue","getRawValue","closest","classList","add","remove","slider","noUiSlider","create","start","connect","tooltips","step","range","min","max","wNumb","decimals","thousand","suffix","on","sliderValue","get","split","parseInt","String","replace","Model","_interopRequireWildcard","_updateResultsView","_radioPrograms","_utils","_costInput","_costRange","_paymentInput","_paymentRange","_timeInput","_timeRange","_getRequireWildcardCache","e","WeakMap","r","t","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_typeof","o","Symbol","iterator","constructor","_regeneratorRuntime","c","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","window","onload","cleaveCost","costInput","sliderCost","costRange","cleavePayment","paymentInput","sliderPayment","paymentRange","cleaveTime","timeInput","sliderTime","timeRange","updateOptions","updateFormAndSliders","openFormBtn","orderForm","submitFormBtn","preventDefault","formData","FormData","_fetchData","_callee","url","checkOnUrl","response","result","_callee$","_context","_checkOnUrl","urlArrayDot","newUrl","join","urlArraySlash","location","href","fetch","headers","body","JSON","stringify","form","email","phone","text","removeAttribute","getElementById","setAttribute","fetchData"],"mappings":";AA4HA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,MAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,UAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,UAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,WAAA,EAAA,QAAA,QAAA,EA5HA,IAAIA,EAAO,CACVC,gBAAiB,GACjBC,KAAM,KACNC,SAAU,MACVC,SAAU,IACVC,mBAAoB,IACpBC,mBAAoB,GACpBC,gBAAiB,GACjBC,QAAS,IACTC,cAAe,WACd,OAAO,KAAKP,KAAO,KAAKG,oBAEzBK,cAAe,WACd,OAAO,KAAKR,KAAO,KAAKI,oBAEtBK,QAAS,EACTC,QAAS,GACTC,KAAM,GACTC,SAAU,CACTC,KAAM,GACNC,GAAI,KACJC,IAAK,KACLC,KAAM,MAIJC,EAAU,CACbC,KAAMpB,EAAKC,iBAGZ,SAASoB,IACR,OAAAC,EAAYtB,GAAAA,GAGb,SAASuB,IACR,OAAAD,EAAYH,GAAAA,GAGb,SAASK,EAAQC,GAChBC,QAAQC,IAAI,WAAYF,GAEC,iBAArBA,EAAQG,WACQ,eAAfH,EAAQI,GACX7B,EAAKK,mBAAqB,EAE1BL,EAAKK,mBAAqB,KAIH,cAArBoB,EAAQG,UAAiD,eAArBH,EAAQG,WAG3CH,EAAQvB,KAAOF,EAAKG,WAAUsB,EAAQvB,KAAOF,EAAKG,UAGlDsB,EAAQvB,KAAOF,EAAKI,WAAUqB,EAAQvB,KAAOF,EAAKI,UAGlDJ,EAAKQ,QAAUR,EAAKU,kBACvBV,EAAKQ,QAAUR,EAAKU,iBAIjBV,EAAKQ,QAAUR,EAAKS,kBACvBT,EAAKQ,QAAUR,EAAKS,iBAGrBT,EAAKO,gBAAkC,IAAfP,EAAKQ,QAAiBiB,EAAQvB,KAAO,KAGrC,iBAArBuB,EAAQG,WAEXH,EAAQlB,gBAAqC,IAAlBkB,EAAQjB,QAAiBR,EAAKE,KAAO,IAG5DuB,EAAQlB,gBAAkBP,EAAKM,qBAClCmB,EAAQlB,gBAAkBP,EAAKM,mBAC/BmB,EAAQjB,QAAUR,EAAKE,KAAOF,EAAKM,oBAIhCmB,EAAQlB,gBAAkBP,EAAKK,qBAClCoB,EAAQlB,gBAAkBP,EAAKK,mBAC/BoB,EAAQjB,QAAUR,EAAKE,KAAOF,EAAKK,qBAIZ,kBAArBoB,EAAQG,WACXH,EAAQlB,gBAAkBkB,EAAQlB,gBAAkB,IACpDP,EAAKQ,QAAUR,EAAKE,KAAOuB,EAAQlB,iBAGX,cAArBkB,EAAQG,WACPH,EAAQZ,KAAOb,EAAKY,UACvBa,EAAQZ,KAAOb,EAAKY,SAGjBa,EAAQZ,KAAOb,EAAKW,UACvBc,EAAQZ,KAAOb,EAAKW,UAUnB,IAAMmB,EAAqB,IAN9B9B,EAAIsB,EAAAA,EACAtB,GAAAA,GACAyB,IAImBZ,KACdkB,EAAc/B,EAAKE,KAAOF,EAAKQ,QAC/BwB,EAAYhC,EAAKC,gBAAkB,GACnCgC,EAAWC,KAAAC,IAAI,EAAIH,EAAcF,GACjCM,EAAgBL,EAAcC,EAAYC,GAAgBA,EAAc,GACxEI,EAAcD,EAAeN,EAASC,EAE/CZ,EAAU,CACHC,KAAMpB,EAAKC,gBACX8B,YAAAA,EACAK,aAAAA,EACAC,YAAAA,GAGPX,QAAQC,IAAI,eAAgB3B,GAC5B0B,QAAQC,IAAI,cAAeR;;AC/G5B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,QAAA,oBAAA,EAZA,IAAMmB,EAAcC,QAAAD,eAAG,IAAIE,KAAKC,aAAa,QAAS,CAClDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAIrBC,EAAsBN,QAAAM,uBAAG,IAAIL,KAAKC,aAAa,QAAS,CAC7DC,MAAO,WACPC,SAAU,MACVC,sBAAuB;;ACDQ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAThC,IAAAE,EAAAC,QAAA,4BAEA,SAASC,EAAkB7B,GACvB8B,SAASC,cAAc,kBAAkBC,UAA2B,IAAfhC,EAAQC,KAAa,IAC1E6B,SAASC,cAAc,wBAAwBC,UAAYN,EAAsB,uBAACO,OAAOjC,EAAQiB,cACjGa,SAASC,cAAc,eAAeC,UAAYb,EAAc,eAACc,OAAOjC,EAAQY,aAChFkB,SAASC,cAAc,sBAAsBC,UAAYN,EAAsB,uBAACO,OAAOjC,EAAQkB,aAClG,IAAAgB,EAAAd,QAAAe,QAEcN;;ACAW,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,MAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,UAAA,MAAA,UAAA,EAAA,GAAA,EAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,aAAA,QAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,GAAA,UAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,gDAAA,OAAA,WAAA,EAAA,OAAA,QAAA,GAT1B,SAASO,EAAYC,EAASxD,GAC1BwD,EAAQC,cACV,IAAIC,YAAY,aAAc,CAC7BC,SAAS,EACTC,OAAMtC,EAAMtB,GAAAA,MAKW,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAFzB,IAAAqD,EAAAd,QAAAe,QAEcC;;ACqBI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA9BnB,IAAAM,EAAAC,EAAAf,QAAA,8BAAoD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAEpD,SAASE,EAAK5C,GAEV,IAAM6C,EAAYjB,SAASkB,iBAAiB,yBAC/CC,EAAgC/C,IAAUP,SAAlCC,EAAIqD,EAAJrD,KAAMC,EAAEoD,EAAFpD,GAAIC,EAAGmD,EAAHnD,IAAKC,EAAIkD,EAAJlD,KAGvB+B,SAASC,cAAc,eAAemB,MAAQtD,EAC9CkC,SAASC,cAAc,aAAamB,MAAQrD,EAC5CiC,SAASC,cAAc,cAAcmB,MAAQpD,EAC7CgC,SAASC,cAAc,eAAemB,MAAQnD,EAG9C+B,SAASC,cAAc,cAAcoB,UAAmB,IAAPvD,EAAa,IAC9DkC,SAASC,cAAc,YAAYoB,UAAiB,IAALtD,EAAW,IAC1DiC,SAASC,cAAc,aAAaoB,UAAkB,IAANrD,EAAY,IACzDgC,SAASC,cAAc,cAAcoB,UAAmB,IAAPpD,EAAa,IAE9DgD,EAAUK,QAAQ,SAAUC,GACxBA,EAASC,iBAAiB,SAAU,YACzC,EAAAlB,EAAW,SAAC,KAAM,CACjB3B,SAAU,eACV3B,gBAAiByE,WAAW,KAAKL,OACjCxC,GAAI,KAAKA,SAIZ,IAAAwB,EAAAd,QAAAe,QAEcW;;AC5Bf,aAFA,SAASU,EAAkB3E,GACvBiD,SAASC,cAAc,kBAAkBoB,UAAsC,IAA1BtE,EAAKK,mBAA2B,IACzF,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA;;ACiDmB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnDnB,IAAAwD,EAAAC,EAAAf,QAAA,8BAAmD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAEnD,SAASE,EAAK5C,GACV,IAAMrB,EAAOqB,IACPuD,EAAQ3B,SAASC,cAAc,eAQ/B2B,EAAc,IAAIC,OAAOF,EANd,CACnBG,SAAS,EACTC,2BAA4B,WAC5BC,UAAW,MAuCZ,OAnCGJ,EAAYK,YAAYlF,EAAKE,MAE7B0E,EAAMH,iBAAiB,QAAS,WAClC,IAAMJ,GAASQ,EAAYM,eAGvBd,EAAQrE,EAAKG,UAAYkE,EAAQrE,EAAKI,WACzCwE,EAAMQ,QAAQ,mBAAmBC,UAAUC,IAAI,yBAG5CjB,GAASrE,EAAKG,UAAYkE,GAASrE,EAAKI,UAC3CwE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,0BAInD,EAAAhC,EAAW,SAACqB,EAAO,CAAE1E,KAAMmE,EAAOzC,SAAU,gBAG1CgD,EAAMH,iBAAiB,SAAU,WACnC,IAAMJ,GAASQ,EAAYM,cAEvBd,EAAQrE,EAAKI,WAChBwE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAYlF,EAAKI,WAG1BiE,EAAQrE,EAAKG,WAChByE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAYlF,EAAKG,YAI9B,EAAAoD,EAAW,SAACqB,EAAO,CAAE1E,MAAO2E,EAAYM,cAAevD,SAAU,gBAG3DiD,EACP,IAAAxB,EAAAd,QAAAe,QAEcW;;ACdI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArCnB,IAAAJ,EAAAC,EAAAf,QAAA,8BAAoD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAEpD,SAASE,EAAK5C,GACV,IAAMmE,EAASvC,SAASC,cAAc,gBAChClD,EAAOqB,IA8Bb,OA5BAoE,WAAWC,OAAOF,EAAQ,CACtBG,MAAO3F,EAAKE,KACZ0F,QAAS,QACTC,UAAU,EACVC,KAAM,IACNC,MAAO,CACHC,IAAKhG,EAAKG,SACV,KAAM,CAAC,IAAQ,KACf,MAAO,CAAC,IAAU,KAClB8F,IAAKjG,EAAKI,UAEdgD,OAAQ8C,MAAM,CACVC,SAAU,EACVC,SAAU,IACVC,OAAQ,OAIhBb,EAAOC,WAAWa,GAAG,QAAS,WAE1B,IAAIC,EAAcf,EAAOC,WAAWe,MACpCD,EAAcA,EAAYE,MAAM,KAAK,GACrCF,EAAcG,SAASC,OAAOJ,GAAaK,QAAQ,KAAM,MAEzD,EAAArD,EAAW,SAACiC,EAAQ,CAACtF,KAAMqG,EAAa3E,SAAU,iBAI/C4D,EACV,IAAAnC,EAAAd,QAAAe,QAEcW;;ACaI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlDnB,IAAAJ,EAAAC,EAAAf,QAAA,4BAAiD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAEjD,SAASE,EAAK5C,GACV,IAAMuD,EAAQ3B,SAASC,cAAc,sBAQ/B2B,EAAc,IAAIC,OAAOF,EANd,CACnBG,SAAS,EACTC,2BAA4B,WAC5BC,UAAW,MAuCZ,OAnCGJ,EAAYK,YAAY7D,IAAUb,SAElCoE,EAAMH,iBAAiB,QAAS,WAClC,IAAMJ,GAASQ,EAAYM,eAGvBd,EAAQhD,IAAUZ,iBAAmB4D,EAAQhD,IAAUX,kBAC1DkE,EAAMQ,QAAQ,mBAAmBC,UAAUC,IAAI,yBAG5CjB,GAAShD,IAAUZ,iBAAmB4D,GAAShD,IAAUX,iBAC5DkE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,0BAInD,EAAAhC,EAAW,SAACqB,EAAO,CAAEpE,QAAS6D,EAAOzC,SAAU,mBAG7CgD,EAAMH,iBAAiB,SAAU,WACnC,IAAMJ,GAASQ,EAAYM,cAEvBd,EAAQhD,IAAUX,kBACrBkE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAY7D,IAAUX,kBAG/B2D,EAAQhD,IAAUZ,kBACrBmE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAY7D,IAAUZ,mBAInC,EAAA8C,EAAW,SAACqB,EAAO,CAAEpE,QAAS6D,EAAOzC,SAAU,mBAGzCiD,EACP,IAAAxB,EAAAd,QAAAe,QAEcW;;AChBI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlCnB,IAAAJ,EAAAC,EAAAf,QAAA,4BAAkD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAElD,SAASE,EAAK5C,GACV,IAAMmE,EAASvC,SAASC,cAAc,uBA4BtC,OA1BAuC,WAAWC,OAAOF,EAAQ,CAC5BG,MAAmC,IAA5BtE,IAAUd,gBACjBqF,QAAS,QACTC,UAAU,EACVC,KAAM,EACNC,MAAO,CACNC,IAAoC,IAA/B3E,IAAUhB,mBACf4F,IAAoC,IAA/B5E,IAAUf,oBAEhB8C,OAAQ8C,MAAM,CACbC,SAAU,EACVC,SAAU,IACVC,OAAQ,OAIPb,EAAOC,WAAWa,GAAG,QAAS,WAE1B,IAAIC,EAAcf,EAAOC,WAAWe,MACpCD,EAAcA,EAAYE,MAAM,KAAK,GACrCF,EAAcG,SAASC,OAAOJ,GAAaK,QAAQ,KAAM,MAEzD,EAAArD,EAAW,SAACiC,EAAQ,CAAEjF,gBAAiBgG,EAAa3E,SAAU,oBAI3D4D,EACV,IAAAnC,EAAAd,QAAAe,QAEcW;;ACiBI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnDnB,IAAAJ,EAAAC,EAAAf,QAAA,4BAAiD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAEjD,SAASE,EAAK5C,GACV,IAAMrB,EAAOqB,IACPuD,EAAQ3B,SAASC,cAAc,eAQ/B2B,EAAc,IAAIC,OAAOF,EANd,CACnBG,SAAS,EACTC,2BAA4B,WAC5BC,UAAW,MAuCZ,OAnCGJ,EAAYK,YAAYlF,EAAKa,MAE7B+D,EAAMH,iBAAiB,QAAS,WAClC,IAAMJ,GAASQ,EAAYM,eAGvBd,EAAQrE,EAAKW,SAAW0D,EAAQrE,EAAKY,UACxCgE,EAAMQ,QAAQ,mBAAmBC,UAAUC,IAAI,yBAG5CjB,GAASrE,EAAKW,SAAW0D,GAASrE,EAAKY,SAC1CgE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,0BAInD,EAAAhC,EAAW,SAACqB,EAAO,CAAE/D,KAAMwD,EAAOzC,SAAU,gBAG1CgD,EAAMH,iBAAiB,SAAU,WACnC,IAAMJ,GAASQ,EAAYM,cAEvBd,EAAQrE,EAAKY,UAChBgE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAYlF,EAAKY,UAG1ByD,EAAQrE,EAAKW,UAChBiE,EAAMQ,QAAQ,mBAAmBC,UAAUE,OAAO,yBAClDV,EAAYK,YAAYlF,EAAKW,WAI9B,EAAA4C,EAAW,SAACqB,EAAO,CAAE/D,MAAOgE,EAAYM,cAAevD,SAAU,gBAG3DiD,EACP,IAAAxB,EAAAd,QAAAe,QAEcW;;ACjBI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlCnB,IAAAJ,EAAAC,EAAAf,QAAA,4BAAkD,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAElD,SAASE,EAAK5C,GACV,IAAMmE,EAASvC,SAASC,cAAc,gBAChClD,EAAOqB,IA2Bb,OAzBAoE,WAAWC,OAAOF,EAAQ,CAC5BG,MAAO3F,EAAKa,KACZ+E,QAAS,QACTC,UAAU,EACVC,KAAM,EACNC,MAAO,CACNC,IAAKhG,EAAKW,QACVsF,IAAKjG,EAAKY,SAEXwC,OAAQ8C,MAAM,CACbC,SAAU,EACVC,SAAU,IACVC,OAAQ,OAIPb,EAAOC,WAAWa,GAAG,QAAS,WAE1B,IAAIC,EAAcf,EAAOC,WAAWe,MACpCD,EAAcA,EAAYE,MAAM,KAAK,GACrCF,EAAcG,SAASC,OAAOJ,GAAaK,QAAQ,KAAM,MAEzD,EAAArD,EAAW,SAACiC,EAAQ,CAAE3E,KAAM0F,EAAa3E,SAAU,iBAGhD4D,EACV,IAAAnC,EAAAd,QAAAe,QAEcW;;ACuJd,aAzLD,IAAA4C,EAAAC,EAAA/D,QAAA,eACAgE,EAAAjD,EAAAf,QAAA,gCACAiE,EAAAlD,EAAAf,QAAA,4BACAkE,EAAAlE,QAAA,mBAEAmE,EAAApD,EAAAf,QAAA,wBACAoE,EAAArD,EAAAf,QAAA,wBAEAqE,EAAAtD,EAAAf,QAAA,2BACAsE,EAAAvD,EAAAf,QAAA,2BAEAuE,EAAAxD,EAAAf,QAAA,wBACAwE,EAAAzD,EAAAf,QAAA,wBAA4C,SAAAe,EAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAT,CAAAA,QAAAS,GAAA,SAAAyD,EAAAC,GAAAC,GAAAA,mBAAAA,QAAAC,OAAAA,KAAAA,IAAAA,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,QAAAF,OAAAA,EAAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,GAAA,SAAAX,EAAAW,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAzD,WAAAyD,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAnE,MAAAA,CAAAA,QAAAmE,GAAAG,IAAAA,EAAAJ,EAAAG,GAAAC,GAAAA,GAAAA,EAAAC,IAAAJ,GAAAG,OAAAA,EAAApB,IAAAiB,GAAAK,IAAAA,EAAAC,CAAAA,UAAAC,MAAAA,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAAC,IAAAA,IAAAA,KAAAX,EAAAW,GAAAA,YAAAA,GAAAH,OAAAI,UAAAC,eAAAC,KAAAd,EAAAW,GAAAI,CAAAA,IAAAA,EAAAR,EAAAC,OAAAE,yBAAAV,EAAAW,GAAAI,KAAAA,IAAAA,EAAAhC,KAAAgC,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAX,EAAAW,GAAAN,OAAAA,EAAAxE,QAAAmE,EAAAG,GAAAA,EAAAa,IAAAhB,EAAAK,GAAAA,EAAA,SAAAY,EAAAC,GAAAD,OAAAA,EAAAE,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAF,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAC,mBAAAA,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAP,UAAAM,gBAAAA,IAAAA,GAAA,SAAAI,IAX5CA,EAAAA,WAAAtB,OAAAA,GAAAG,IAAAA,EAAAH,EAAAE,GAAAA,EAAAM,OAAAI,UAAAP,EAAAH,EAAAW,eAAAK,EAAAV,OAAAC,gBAAAN,SAAAA,EAAAH,EAAAE,GAAAC,EAAAH,GAAAE,EAAAtD,OAAAmE,EAAAI,mBAAAA,OAAAA,OAAAZ,GAAAA,EAAAQ,EAAAK,UAAAG,aAAAA,EAAAR,EAAAS,eAAAb,kBAAAA,EAAAI,EAAAU,aAAAC,gBAAAA,SAAAA,EAAAvB,EAAAH,EAAAE,GAAAM,OAAAA,OAAAC,eAAAN,EAAAH,EAAApD,CAAAA,MAAAsD,EAAAyB,YAAAC,EAAAA,cAAAC,EAAAA,UAAA1B,IAAAA,EAAAH,GAAA0B,IAAAA,EAAAvB,GAAAA,IAAAA,MAAAA,GAAAuB,EAAAA,SAAAvB,EAAAH,EAAAE,GAAAC,OAAAA,EAAAH,GAAAE,GAAA4B,SAAAA,EAAA3B,EAAAH,EAAAE,EAAAG,GAAAU,IAAAA,EAAAf,GAAAA,EAAAY,qBAAAmB,EAAA/B,EAAA+B,EAAAxB,EAAAC,OAAAvC,OAAA8C,EAAAH,WAAAW,EAAAS,IAAAA,EAAA3B,GAAAa,IAAAA,OAAAA,EAAAX,EAAA3D,UAAAA,CAAAA,MAAAqF,EAAA9B,EAAAD,EAAAqB,KAAAhB,EAAA2B,SAAAA,EAAA/B,EAAAH,EAAAE,GAAAiC,IAAAA,MAAAA,CAAAA,KAAAC,SAAAA,IAAAjC,EAAAW,KAAAd,EAAAE,IAAAC,MAAAA,GAAAgC,MAAAA,CAAAA,KAAAC,QAAAA,IAAAjC,IAAAH,EAAA8B,KAAAA,EAAAO,IAAAA,EAAAC,iBAAAA,EAAAC,iBAAAA,EAAAC,YAAAA,EAAAC,YAAAA,EAAAV,GAAAA,SAAAA,KAAAW,SAAAA,KAAAC,SAAAA,KAAAC,IAAAA,EAAAlB,GAAAA,EAAAkB,EAAArC,EAAAsC,WAAAA,OAAAA,OAAAA,IAAAA,EAAArC,OAAAsC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAAD,MAAAA,GAAAA,IAAA7C,GAAAG,EAAAS,KAAAiC,EAAAxC,KAAAqC,EAAAG,GAAAE,IAAAA,EAAAN,EAAA/B,UAAAmB,EAAAnB,UAAAJ,OAAAvC,OAAA2E,GAAAM,SAAAA,EAAA/C,GAAArD,CAAAA,OAAAA,QAAAA,UAAAA,QAAAkD,SAAAA,GAAA0B,EAAAvB,EAAAH,EAAAG,SAAAA,GAAAgD,OAAAA,KAAAA,QAAAnD,EAAAG,OAAAiD,SAAAA,EAAAjD,EAAAH,GAAAqD,SAAAA,EAAAnD,EAAAgB,EAAAH,EAAAR,GAAAgB,IAAAA,EAAAW,EAAA/B,EAAAD,GAAAC,EAAAe,GAAAK,GAAAA,UAAAA,EAAAY,KAAAxB,CAAAA,IAAAA,EAAAY,EAAAa,IAAAC,EAAA1B,EAAA/D,MAAAyF,OAAAA,GAAApB,UAAAA,EAAAoB,IAAAhC,EAAAS,KAAAuB,EAAArC,WAAAA,EAAAsD,QAAAjB,EAAAkB,SAAAC,KAAArD,SAAAA,GAAAkD,EAAAlD,OAAAA,EAAAY,EAAAR,IAAAJ,SAAAA,GAAAkD,EAAAlD,QAAAA,EAAAY,EAAAR,KAAAP,EAAAsD,QAAAjB,GAAAmB,KAAArD,SAAAA,GAAAQ,EAAA/D,MAAAuD,EAAAY,EAAAJ,IAAAR,SAAAA,GAAAkD,OAAAA,EAAAlD,QAAAA,EAAAY,EAAAR,KAAAA,EAAAgB,EAAAa,KAAAlC,IAAAA,EAAAgB,EAAAtE,KAAAA,UAAAA,CAAAA,MAAAA,SAAAuD,EAAAE,GAAAoD,SAAAA,IAAAzD,OAAAA,IAAAA,EAAAA,SAAAA,EAAAE,GAAAmD,EAAAlD,EAAAE,EAAAL,EAAAE,KAAAA,OAAAA,EAAAA,EAAAA,EAAAsD,KAAAC,EAAAA,GAAAA,OAAAxB,SAAAA,EAAAjC,EAAAE,EAAAG,GAAAa,IAAAA,EAAAmB,EAAAtB,OAAAA,SAAAA,EAAAR,GAAAW,GAAAA,IAAAqB,EAAAmB,MAAAA,IAAAA,MAAAxC,gCAAAA,GAAAA,IAAAsB,EAAAzB,CAAAA,GAAAA,UAAAA,EAAAR,MAAAA,EAAA3D,MAAAA,CAAAA,MAAAuD,EAAAwD,MAAAtD,GAAAA,IAAAA,EAAAuD,OAAA7C,EAAAV,EAAA+B,IAAA7B,IAAAgB,CAAAA,IAAAA,EAAAlB,EAAAwD,SAAAtC,GAAAA,EAAAZ,CAAAA,IAAAA,EAAAmD,EAAAvC,EAAAlB,GAAAM,GAAAA,EAAAA,CAAAA,GAAAA,IAAA8B,EAAA9B,SAAAA,OAAAA,GAAAN,GAAAA,SAAAA,EAAAuD,OAAAvD,EAAA0D,KAAA1D,EAAA2D,MAAA3D,EAAA+B,SAAA/B,GAAAA,UAAAA,EAAAuD,OAAA1C,CAAAA,GAAAA,IAAAmB,EAAAnB,MAAAA,EAAAsB,EAAAnC,EAAA+B,IAAA/B,EAAA4D,kBAAA5D,EAAA+B,SAAA/B,WAAAA,EAAAuD,QAAAvD,EAAA6D,OAAA7D,SAAAA,EAAA+B,KAAAlB,EAAAqB,EAAAK,IAAAA,EAAAV,EAAAlC,EAAAE,EAAAG,GAAAuC,GAAAA,WAAAA,EAAAT,KAAAjB,CAAAA,GAAAA,EAAAb,EAAAsD,KAAAnB,EAAAF,EAAAM,EAAAR,MAAAK,EAAA7F,SAAAA,MAAAA,CAAAA,MAAAgG,EAAAR,IAAAuB,KAAAtD,EAAAsD,MAAAf,UAAAA,EAAAT,OAAAjB,EAAAsB,EAAAnC,EAAAuD,OAAAvD,QAAAA,EAAA+B,IAAAQ,EAAAR,OAAA0B,SAAAA,EAAA9D,EAAAE,GAAAG,IAAAA,EAAAH,EAAA0D,OAAA1C,EAAAlB,EAAAoB,SAAAf,GAAAa,GAAAA,IAAAf,EAAAD,OAAAA,EAAA2D,SAAAxD,KAAAA,UAAAA,GAAAL,EAAAoB,SAAA+C,SAAAjE,EAAA0D,OAAA1D,SAAAA,EAAAkC,IAAAjC,EAAA2D,EAAA9D,EAAAE,GAAAA,UAAAA,EAAA0D,SAAAvD,WAAAA,IAAAH,EAAA0D,OAAA1D,QAAAA,EAAAkC,IAAAgC,IAAAA,UAAA/D,oCAAAA,EAAAoC,aAAAA,EAAA1B,IAAAA,EAAAmB,EAAAhB,EAAAlB,EAAAoB,SAAAlB,EAAAkC,KAAArB,GAAAA,UAAAA,EAAAoB,KAAAjC,OAAAA,EAAA0D,OAAA1D,QAAAA,EAAAkC,IAAArB,EAAAqB,IAAAlC,EAAA2D,SAAApB,KAAAA,EAAAlC,IAAAA,EAAAQ,EAAAqB,IAAA7B,OAAAA,EAAAA,EAAAoD,MAAAzD,EAAAF,EAAAqE,YAAA9D,EAAA3D,MAAAsD,EAAAoE,KAAAtE,EAAAuE,QAAArE,WAAAA,EAAA0D,SAAA1D,EAAA0D,OAAA1D,OAAAA,EAAAkC,IAAAjC,GAAAD,EAAA2D,SAAApB,KAAAA,GAAAlC,GAAAL,EAAA0D,OAAA1D,QAAAA,EAAAkC,IAAAgC,IAAAA,UAAAlE,oCAAAA,EAAA2D,SAAApB,KAAAA,GAAA+B,SAAAA,EAAArE,GAAAH,IAAAA,EAAAyE,CAAAA,OAAAtE,EAAAA,IAAAA,KAAAA,IAAAH,EAAA0E,SAAAvE,EAAAA,IAAAA,KAAAA,IAAAH,EAAA2E,WAAAxE,EAAAH,GAAAA,EAAA4E,SAAAzE,EAAA0E,IAAAA,KAAAA,WAAAC,KAAA9E,GAAA+E,SAAAA,EAAA5E,GAAAH,IAAAA,EAAAG,EAAA6E,YAAAhF,GAAAA,EAAAmC,KAAAnC,gBAAAA,EAAAoC,IAAAjC,EAAA6E,WAAAhF,EAAAgC,SAAAA,EAAA7B,GAAA0E,KAAAA,WAAAJ,CAAAA,CAAAA,OAAAtE,SAAAA,EAAArD,QAAA0H,EAAAS,MAAAA,KAAAA,OAAAjC,GAAAA,SAAAA,EAAAhD,GAAAA,GAAAA,GAAAA,KAAAA,EAAAE,CAAAA,IAAAA,EAAAF,EAAAO,GAAAL,GAAAA,EAAAA,OAAAA,EAAAY,KAAAd,GAAAA,GAAAA,mBAAAA,EAAAsE,KAAAtE,OAAAA,EAAAkF,IAAAA,MAAAlF,EAAAmF,QAAAjE,CAAAA,IAAAA,GAAAH,EAAAA,EAAAuD,SAAAA,IAAApD,OAAAA,EAAAlB,EAAAmF,QAAA9E,GAAAA,EAAAS,KAAAd,EAAAkB,GAAAoD,OAAAA,EAAA1H,MAAAoD,EAAAkB,GAAAoD,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAA1H,MAAAuD,EAAAmE,EAAAX,MAAAW,EAAAA,GAAAvD,OAAAA,EAAAuD,KAAAvD,GAAAqD,MAAAA,IAAAA,UAAAnD,EAAAjB,GAAA0C,oBAAAA,OAAAA,EAAA9B,UAAA+B,EAAAzB,EAAA+B,EAAArG,cAAAA,CAAAA,MAAA+F,EAAAf,cAAAV,IAAAA,EAAAyB,EAAA/F,cAAAA,CAAAA,MAAA8F,EAAAd,cAAAc,IAAAA,EAAA0C,YAAA1D,EAAAiB,EAAAhC,EAAAX,qBAAAA,EAAAqF,oBAAAlF,SAAAA,GAAAH,IAAAA,EAAAG,mBAAAA,GAAAA,EAAAkB,YAAArB,QAAAA,IAAAA,IAAA0C,GAAA1C,uBAAAA,EAAAoF,aAAApF,EAAAsF,QAAAtF,EAAAuF,KAAApF,SAAAA,GAAAK,OAAAA,OAAAgF,eAAAhF,OAAAgF,eAAArF,EAAAwC,IAAAxC,EAAAG,UAAAqC,EAAAjB,EAAAvB,EAAAQ,EAAAR,sBAAAA,EAAAS,UAAAJ,OAAAvC,OAAAgF,GAAA9C,GAAAH,EAAAyF,MAAAtF,SAAAA,GAAAoD,MAAAA,CAAAA,QAAApD,IAAA+C,EAAAE,EAAAxC,WAAAc,EAAA0B,EAAAxC,UAAAW,EAAAvB,WAAAA,OAAAA,OAAAA,EAAAoD,cAAAA,EAAApD,EAAA0F,MAAAvF,SAAAA,EAAAD,EAAAG,EAAAa,EAAAH,QAAAA,IAAAA,IAAAA,EAAA4E,SAAApF,IAAAA,EAAA6C,IAAAA,EAAAtB,EAAA3B,EAAAD,EAAAG,EAAAa,GAAAH,GAAAf,OAAAA,EAAAqF,oBAAAnF,GAAAK,EAAAA,EAAA+D,OAAAd,KAAArD,SAAAA,GAAAA,OAAAA,EAAAwD,KAAAxD,EAAAvD,MAAA2D,EAAA+D,UAAApB,EAAAD,GAAAvB,EAAAuB,EAAAtC,EAAAe,aAAAA,EAAAuB,EAAA1C,EAAAmB,WAAAA,OAAAA,OAAAA,EAAAuB,EAAAjD,WAAAA,WAAAA,MAAAA,uBAAAA,EAAA4F,KAAAzF,SAAAA,GAAAH,IAAAA,EAAAQ,OAAAL,GAAAD,EAAAG,GAAAA,IAAAA,IAAAA,KAAAL,EAAAE,EAAA4E,KAAAzE,GAAAH,OAAAA,EAAA2F,UAAAvB,SAAAA,IAAApE,KAAAA,EAAAiF,QAAAhF,CAAAA,IAAAA,EAAAD,EAAA4F,MAAA3F,GAAAA,KAAAH,EAAAsE,OAAAA,EAAA1H,MAAAuD,EAAAmE,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAAX,MAAAW,EAAAA,IAAAtE,EAAAgD,OAAAA,EAAAhB,EAAApB,UAAAS,CAAAA,YAAAW,EAAAiD,MAAAA,SAAAjF,GAAA+F,GAAAA,KAAAA,KAAAzB,EAAAA,KAAAA,KAAAP,EAAAA,KAAAA,KAAAC,KAAAA,MAAA7D,EAAAwD,KAAAA,MAAAE,EAAAA,KAAAA,SAAAD,KAAAA,KAAAA,OAAAxB,OAAAA,KAAAA,IAAAjC,EAAA0E,KAAAA,WAAA/H,QAAAiI,IAAA/E,EAAAE,IAAAA,IAAAA,KAAAA,KAAAA,MAAAA,EAAA8F,OAAA3F,IAAAA,EAAAS,KAAAZ,KAAAA,KAAAgF,OAAAhF,EAAA+F,MAAA/F,MAAAA,KAAAA,GAAAC,IAAA+F,KAAAA,WAAAvC,KAAAA,MAAAxD,EAAAA,IAAAA,EAAA0E,KAAAA,WAAAG,GAAAA,WAAA7E,GAAAA,UAAAA,EAAAgC,KAAAhC,MAAAA,EAAAiC,IAAA+D,OAAAA,KAAAA,MAAAlC,kBAAAA,SAAAjE,GAAA2D,GAAAA,KAAAA,KAAA3D,MAAAA,EAAAE,IAAAA,EAAAkG,KAAAA,SAAAA,EAAA/F,EAAAa,GAAAX,OAAAA,EAAA4B,KAAA5B,QAAAA,EAAA6B,IAAApC,EAAAE,EAAAoE,KAAAjE,EAAAa,IAAAhB,EAAA0D,OAAA1D,OAAAA,EAAAkC,IAAAjC,KAAAe,EAAAA,IAAAA,IAAAA,EAAA2D,KAAAA,WAAAM,OAAAjE,EAAAA,GAAAA,IAAAA,EAAAH,CAAAA,IAAAA,EAAA8D,KAAAA,WAAA3D,GAAAX,EAAAQ,EAAAiE,WAAAjE,GAAAA,SAAAA,EAAA0D,OAAA2B,OAAAA,EAAArF,OAAAA,GAAAA,EAAA0D,QAAAsB,KAAAA,KAAAxE,CAAAA,IAAAA,EAAAlB,EAAAS,KAAAC,EAAAJ,YAAAA,EAAAN,EAAAS,KAAAC,EAAAQ,cAAAA,GAAAA,GAAAZ,EAAAoF,CAAAA,GAAAA,KAAAA,KAAAhF,EAAA2D,SAAA0B,OAAAA,EAAArF,EAAA2D,UAAAqB,GAAAA,GAAAA,KAAAA,KAAAhF,EAAA4D,WAAAyB,OAAAA,EAAArF,EAAA4D,iBAAApD,GAAAA,GAAAwE,GAAAA,KAAAA,KAAAhF,EAAA2D,SAAA0B,OAAAA,EAAArF,EAAA2D,UAAA/D,OAAAA,CAAAA,IAAAA,EAAA+C,MAAAA,IAAAA,MAAAqC,0CAAAA,GAAAA,KAAAA,KAAAhF,EAAA4D,WAAAyB,OAAAA,EAAArF,EAAA4D,gBAAAT,OAAAA,SAAA/D,EAAAH,GAAAE,IAAAA,IAAAA,EAAA2E,KAAAA,WAAAM,OAAAjF,EAAAA,GAAAA,IAAAA,EAAAgB,CAAAA,IAAAA,EAAA2D,KAAAA,WAAA3E,GAAAgB,GAAAA,EAAAuD,QAAAsB,KAAAA,MAAA1F,EAAAS,KAAAI,EAAA6E,eAAAA,KAAAA,KAAA7E,EAAAyD,WAAA5D,CAAAA,IAAAA,EAAAG,EAAAH,OAAAA,IAAAZ,UAAAA,GAAAA,aAAAA,IAAAY,EAAA0D,QAAAzE,GAAAA,GAAAe,EAAA4D,aAAA5D,EAAAR,MAAAA,IAAAA,EAAAQ,EAAAA,EAAAiE,WAAAzE,GAAAA,OAAAA,EAAA4B,KAAAhC,EAAAI,EAAA6B,IAAApC,EAAAe,GAAA6C,KAAAA,OAAAU,OAAAA,KAAAA,KAAAvD,EAAA4D,WAAAlC,GAAA4D,KAAAA,SAAA9F,IAAA8F,SAAAA,SAAAlG,EAAAH,GAAAG,GAAAA,UAAAA,EAAAgC,KAAAhC,MAAAA,EAAAiC,IAAAjC,MAAAA,UAAAA,EAAAgC,MAAAhC,aAAAA,EAAAgC,KAAAmC,KAAAA,KAAAnE,EAAAiC,IAAAjC,WAAAA,EAAAgC,MAAAgE,KAAAA,KAAA/D,KAAAA,IAAAjC,EAAAiC,IAAAwB,KAAAA,OAAAU,SAAAA,KAAAA,KAAAnE,OAAAA,WAAAA,EAAAgC,MAAAnC,IAAAsE,KAAAA,KAAAtE,GAAAyC,GAAA6D,OAAAA,SAAAnG,GAAAH,IAAAA,IAAAA,EAAA6E,KAAAA,WAAAM,OAAAnF,EAAAA,GAAAA,IAAAA,EAAAE,CAAAA,IAAAA,EAAA2E,KAAAA,WAAA7E,GAAAE,GAAAA,EAAAyE,aAAAxE,EAAAkG,OAAAA,KAAAA,SAAAnG,EAAA8E,WAAA9E,EAAA0E,UAAAG,EAAA7E,GAAAuC,IAAA8D,MAAAC,SAAArG,GAAAH,IAAAA,IAAAA,EAAA6E,KAAAA,WAAAM,OAAAnF,EAAAA,GAAAA,IAAAA,EAAAE,CAAAA,IAAAA,EAAA2E,KAAAA,WAAA7E,GAAAE,GAAAA,EAAAuE,SAAAtE,EAAAE,CAAAA,IAAAA,EAAAH,EAAA8E,WAAA3E,GAAAA,UAAAA,EAAA8B,KAAAjB,CAAAA,IAAAA,EAAAb,EAAA+B,IAAA2C,EAAA7E,GAAAgB,OAAAA,GAAAwC,MAAAA,IAAAA,MAAA+C,0BAAAA,cAAAA,SAAAzG,EAAAE,EAAAG,GAAAwD,OAAAA,KAAAA,SAAAzC,CAAAA,SAAA4B,EAAAhD,GAAAqE,WAAAnE,EAAAqE,QAAAlE,GAAAuD,SAAAA,KAAAA,SAAAxB,KAAAA,IAAAjC,GAAAsC,IAAAzC,EAAA,SAAA0G,EAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAC,EAAA3E,GAAA4E,IAAAA,IAAAA,EAAAL,EAAAI,GAAA3E,GAAAxF,EAAAoK,EAAApK,MAAAqK,MAAAA,GAAAD,YAAAJ,EAAAK,GAAAD,EAAArD,KAAAL,EAAA1G,GAAA+I,QAAArC,QAAA1G,GAAA4G,KAAAqD,EAAAC,GAAA,SAAAI,EAAAC,GAAAC,OAAAA,WAAAA,IAAAA,EAAAC,KAAAA,EAAAC,UAAA3B,OAAAA,IAAAA,QAAArC,SAAAA,EAAAsD,GAAAD,IAAAA,EAAAQ,EAAAI,MAAAH,EAAAC,GAAAR,SAAAA,EAAAjK,GAAA8J,EAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAlK,OAAAA,GAAAkK,SAAAA,EAAAU,GAAAd,EAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAU,QAAAA,GAAAX,OAAAY,MAaAC,OAAOC,OAAS,WACf,IAAM/N,EAAUwF,EAAMxF,SAGtB,EAAAP,EAAQ,SAACO,GAGT,IAAMgO,GAAa,EAAAC,EAAS,SAACjO,GACvBkO,GAAa,EAAAC,EAAS,SAACnO,GAGvBoO,GAAgB,EAAAC,EAAY,SAACrO,GAC7BsO,GAAgB,EAAAC,EAAY,SAACvO,GAG7BwO,GAAa,EAAAC,EAAS,SAACzO,GACvB0O,GAAa,EAAAC,EAAS,SAAC3O,GAE7BwF,EAAMrF,QAAQ,IACd,IAAML,EAAU0F,EAAMtF,cACtB,EAAAyB,EAAiB,SAAC7B,GAElB8B,SAASwB,iBAAiB,aAAc,SAACgD,GACxCZ,EAAMrF,QAAQiG,EAAE7D,QAEhB,IAAM5D,EAAO6G,EAAMxF,UACbF,EAAU0F,EAAMtF,cASvB,SAA8BvB,GAEP,iBAAlBA,EAAK4B,YACR,EAAA+C,EAAiB,mBAAC3E,GAGlB2P,EAAclK,WAAWwK,cAAc,CACtClK,MAAO,CACNC,IAA+B,IAA1BhG,EAAKK,mBACV4F,IAA+B,IAA1BjG,EAAKM,uBAMS,cAAlBN,EAAK4B,UACRyN,EAAWnK,YAAYlF,EAAKE,MAIP,eAAlBF,EAAK4B,UACR2N,EAAW9J,WAAWgD,IAAIzI,EAAKE,MAIV,iBAAlBF,EAAK4B,UACR6N,EAAcvK,YAAYlF,EAAKQ,SAIV,kBAAlBR,EAAK4B,UACR+N,EAAclK,WAAWgD,IAA2B,IAAvBzI,EAAKO,iBAIb,cAAlBP,EAAK4B,UACRiO,EAAW3K,YAAYlF,EAAKa,MAIP,eAAlBb,EAAK4B,UACRmO,EAAWtK,WAAWgD,IAAIzI,EAAKa,MA/ChCqP,CAAqBlQ,IAGrB,EAAAgD,EAAiB,SAAC7B,KAiDhB,IAAMgP,EAAclN,SAASC,cAAc,gBACrCkN,EAAYnN,SAASC,cAAc,cACnCmN,EAAgBpN,SAASC,cAAc,kBAE7CiN,EAAY1L,iBAAiB,QAAS,WAClC2L,EAAU/K,UAAUE,OAAO,QAC3B4K,EAAY9K,UAAUC,IAAI,UAG9B8K,EAAU3L,iBAAiB,SAAU,SAAUgD,GACjDA,EAAE6I,iBAGF,IAAMC,EAAW,IAAIC,SAASJ,GAgBA,SAAAK,IAyD7B,OAzD6BA,EAAA9B,EAAA5F,IAAAiE,KAAxB,SAAA0D,IAAA,IAAA1Q,EAAAmB,EAAAwP,EAMIC,EAAUC,EAAAC,EAAA,OAAA/H,IAAAQ,KAAAwH,SAAAC,GAAA,OAAAA,OAAAA,EAAAxD,KAAAwD,EAAAjF,MAAA,KAAA,EAFyB,OAEnC6E,EAAUK,SAACN,GACnB,IAAIO,EAAcP,EAAIlK,MAAM,KAE5B,GAA4C,SAAxCyK,EAAYA,EAAYtE,OAAS,GAAe,CACnDsE,EAAY3D,MACZ,IAAI4D,EAASD,EAAYE,KAAK,KAC1BC,EAAgBF,EAAO1K,MAAM,KAGjC,OAFA4K,EAAc9D,MACd4D,EAASE,EAAcD,KAAK,KAAO,IAIpC,OAAOT,GAjBF3Q,EAAO6G,EAAMxF,UACbF,EAAU0F,EAAMtF,aAElBoP,EAAMC,EAAW3N,SAASqO,SAASC,MAAKP,EAAAjF,KAAA,EAiBrByF,MAAMb,EAAM,WAAY,CAC9CtF,OAAQ,OACRoG,QAAS,CACR,eAAgB,kCAEjBC,KAAMC,KAAKC,UAAU,CACpBC,KAAM,CACL9E,KAAMwD,EAAS/J,IAAI,QACnBsL,MAAOvB,EAAS/J,IAAI,SACpBuL,MAAOxB,EAAS/J,IAAI,UAErBxG,KAAAA,EACAmB,QAAAA,MAEA,KAAA,EAdY,OAAR0P,EAAQG,EAAAxF,KAAAwF,EAAAjF,KAAA,EAgBO8E,EAASmB,OAAM,KAAA,EAA9BlB,EAAME,EAAAxF,KACZ9J,QAAQC,IAAImP,GAEZT,EAAc4B,gBAAgB,YAAY,GAC1C5B,EAAc/L,UAAY,kBAE1B8L,EAAUjM,iBAAiB,SAASI,QAAQ,SAACK,GAC5CA,EAAMqN,gBAAgB,YAAY,KAInC7B,EAAU1D,QACV0D,EAAU/K,UAAUC,IAAI,QAGT,YAAXwL,EACH7N,SAASiP,eAAe,WAAW7M,UAAUE,OAAO,QAEpDtC,SAASiP,eAAe,SAAS7M,UAAUE,OAAO,QAClD,KAAA,GAAA,IAAA,MAAA,OAAAyL,EAAArD,SAAA+C,OACD1B,MAAAD,KAAAA,WAxEDrN,QAAQC,IAAI4O,GACZ7O,QAAQC,IAAI4O,EAAS/J,IAAI,SACzB9E,QAAQC,IAAI4O,EAAS/J,IAAI,UACzB9E,QAAQC,IAAI4O,EAAS/J,IAAI,UAGnB6J,EAAc8B,aAAa,YAAY,GACvC9B,EAAc/L,UAAY,yBAE1B8L,EAAUjM,iBAAiB,SAASI,QAAQ,SAAUK,GAClDA,EAAMuN,aAAa,YAAY,KAGvB,WAEY1B,EAAAzB,MAAAD,KAAAA,WAFxBqD","file":"controller.js","sourceRoot":"..\\js","sourcesContent":["let data = {\r\n\tselectedProgram: 0.1,\r\n\tcost: 12000000,\r\n\tminPrice: 375000,\r\n\tmaxPrice: 100000000,\r\n\tminPaymentPercents: 0.15,\r\n\tmaxPaymentPercents: 0.9,\r\n\tpaymentPercents: 0.5,\r\n\tpayment: 6000000,\r\n\tgetMinPayment: function () {\r\n\t\treturn this.cost * this.minPaymentPercents;\r\n\t},\r\n\tgetMaxPayment: function () {\r\n\t\treturn this.cost * this.maxPaymentPercents;\r\n    },\r\n    minYear: 1,\r\n    maxYear: 30,\r\n    time: 10,\r\n\tprograms: {\r\n\t\tbase: 0.1,\r\n\t\tit: 0.047,\r\n\t\tgov: 0.067,\r\n\t\tzero: 0.12,\r\n\t},\r\n};\r\n\r\nlet results = {\r\n\trate: data.selectedProgram,\r\n};\r\n\r\nfunction getData() {\r\n\treturn { ...data };\r\n}\r\n\r\nfunction getResults() {\r\n\treturn { ...results };\r\n}\r\n\r\nfunction setData(newData) {\r\n\tconsole.log('New data', newData);\r\n\r\n\tif (newData.onUpdate === 'radioProgram') {\r\n\t\tif (newData.id === 'zero-value') {\r\n\t\t\tdata.minPaymentPercents = 0;\r\n\t\t} else {\r\n\t\t\tdata.minPaymentPercents = 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputCost' || newData.onUpdate === 'costSlider') {\r\n\t\t// Обновление цены\r\n\t\t// Если стоимость меньше мин цены\r\n\t\tif (newData.cost < data.minPrice) newData.cost = data.minPrice;\r\n\r\n\t\t// Если стоимость больше макс цены\r\n\t\tif (newData.cost > data.maxPrice) newData.cost = data.maxPrice;\r\n\r\n\t\t// Если новая стоимость меньше первоначалки\r\n\t\tif (data.payment > data.getMaxPayment()) {\r\n\t\t\tdata.payment = data.getMaxPayment();\r\n\t\t}\r\n\r\n\t\t// Если сумма первоначалки меньше чем допустимый мин платеж\r\n\t\tif (data.payment < data.getMinPayment()) {\r\n\t\t\tdata.payment = data.getMinPayment();\r\n\t\t}\r\n\r\n\t\tdata.paymentPercents = (data.payment * 100) / newData.cost / 100;\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputPayment') {\r\n\t\t// Пересчитываем %\r\n\t\tnewData.paymentPercents = (newData.payment * 100) / data.cost / 100;\r\n\r\n\t\t// Если проценты больше 90%\r\n\t\tif (newData.paymentPercents > data.maxPaymentPercents) {\r\n\t\t\tnewData.paymentPercents = data.maxPaymentPercents;\r\n\t\t\tnewData.payment = data.cost * data.maxPaymentPercents;\r\n\t\t}\r\n\r\n\t\t// Если проценты меньше 90%\r\n\t\tif (newData.paymentPercents < data.minPaymentPercents) {\r\n\t\t\tnewData.paymentPercents = data.minPaymentPercents;\r\n\t\t\tnewData.payment = data.cost * data.minPaymentPercents;\r\n\t\t}\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'paymentSlider') {\r\n\t\tnewData.paymentPercents = newData.paymentPercents / 100;\r\n\t\tdata.payment = data.cost * newData.paymentPercents;\r\n\t}\r\n\r\n\tif (newData.onUpdate === 'inputTime') {\r\n\t\tif (newData.time > data.maxYear) {\r\n\t\t\tnewData.time = data.maxYear;\r\n\t\t}\r\n\r\n\t\tif (newData.time < data.minYear) {\r\n\t\t\tnewData.time = data.minYear;\r\n\t\t}\r\n\t}\r\n\r\n\tdata = {\r\n\t\t...data,\r\n\t\t...newData,\r\n\t};\r\n\r\n\t// Рассчет ипотеки\r\n    const months = data.time * 12;\r\n    const totalAmount = data.cost - data.payment;\r\n    const monthRate = data.selectedProgram / 12;\r\n    const generalRate = (1 + monthRate) ** months;\r\n    const monthPayment = (totalAmount * monthRate * generalRate) / (generalRate - 1);\r\n    const overPayment = monthPayment * months - totalAmount;\r\n\r\n\tresults = {\r\n        rate: data.selectedProgram,\r\n        totalAmount,\r\n        monthPayment,\r\n        overPayment\r\n\t};\r\n\r\n\tconsole.log('Updated data', data);\r\n\tconsole.log('New resulst', results);\r\n}\r\n\r\nexport { getData, setData, getResults };\r\n","const priceFormatter = new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB',\r\n    maximumFractionDigits: 0\r\n})\r\n// 7 000 000 Р\r\n\r\nconst priceFormatterDecimals = new Intl.NumberFormat('ru-RU', {\r\n\tstyle: 'currency',\r\n\tcurrency: 'RUB',\r\n\tmaximumFractionDigits: 2,\r\n});\r\n// 7 000 000.45 Р\r\n\r\nexport {priceFormatter, priceFormatterDecimals}","import {priceFormatter, priceFormatterDecimals} from './../utils/formatters.js'\r\n\r\nfunction updateResultsView(results) {\r\n    document.querySelector('#total-percent').innerHTML = results.rate * 100 + '%';\r\n    document.querySelector('#total-month-payment').innerHTML = priceFormatterDecimals.format(results.monthPayment);\r\n    document.querySelector('#total-cost').innerHTML = priceFormatter.format(results.totalAmount);\r\n    document.querySelector('#total-overpayment').innerHTML = priceFormatterDecimals.format(results.overPayment);\r\n}\r\n\r\nexport default updateResultsView;","function updateModel(element, data) {\r\n    element.dispatchEvent(\r\n\t\tnew CustomEvent('updateForm', {\r\n\t\t\tbubbles: true,\r\n\t\t\tdetail: {...data}\r\n\t\t})\r\n\t);\r\n}\r\n\r\nexport default updateModel;","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n\r\n    const radioBtns = document.querySelectorAll('input[name=\"program\"]');\r\n\tconst { base, it, gov, zero } = getData().programs;\r\n\r\n\t// Set program rates in radio buttons\r\n\tdocument.querySelector('#base-value').value = base;\r\n\tdocument.querySelector('#it-value').value = it;\r\n\tdocument.querySelector('#gov-value').value = gov;\r\n\tdocument.querySelector('#zero-value').value = zero;\r\n\r\n\t// Show program rates on page\r\n\tdocument.querySelector('#base-text').innerText = base * 100 + '%';\r\n\tdocument.querySelector('#it-text').innerText = it * 100 + '%';\r\n\tdocument.querySelector('#gov-text').innerText = gov * 100 + '%';\r\n    document.querySelector('#zero-text').innerText = zero * 100 + '%';\r\n\r\n    radioBtns.forEach(function (radioBtn) {\r\n        radioBtn.addEventListener('change', function () {\r\n\t\t\tupdateModel(this, {\r\n\t\t\t\tonUpdate: 'radioProgram',\r\n\t\t\t\tselectedProgram: parseFloat(this.value),\r\n\t\t\t\tid: this.id,\r\n\t\t\t});\r\n\t\t});\r\n    })\r\n}\r\n\r\nexport default init;","function updateMinPercents(data) {\r\n    document.querySelector('#percents-from').innerText = data.minPaymentPercents * 100 + '%';\r\n}\r\n\r\nexport { updateMinPercents };","import updateModel from './../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const data = getData();\r\n    const input = document.querySelector('#input-cost');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(data.cost);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс цену\r\n\t\tif (value < data.minPrice || value > data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= data.minPrice && value <= data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { cost: value, onUpdate: 'inputCost' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > data.maxPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.maxPrice);\r\n\t\t}\r\n\r\n\t\tif (value < data.minPrice) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.minPrice);\r\n        }\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { cost: +cleaveInput.getRawValue(), onUpdate: 'inputCost' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"./../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-cost');\r\n    const data = getData();\r\n\r\n    noUiSlider.create(slider, {\r\n        start: data.cost,\r\n        connect: 'lower',\r\n        tooltips: true,\r\n        step: 100000,\r\n        range: {\r\n            min: data.minPrice,\r\n            '1%': [400000, 100000],\r\n            '50%': [10000000, 500000],\r\n            max: data.maxPrice\r\n        },\r\n        format: wNumb({\r\n            decimals: 0,\r\n            thousand: ' ',\r\n            suffix: ''\r\n        })\r\n    });\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, {cost: sliderValue, onUpdate: 'costSlider'});\r\n    })\r\n\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import updateModel from '../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const input = document.querySelector('#input-downpayment');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(getData().payment);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс сумму первого платежа\r\n\t\tif (value < getData().getMinPayment() || value > getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= getData().getMinPayment() && value <= getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { payment: value, onUpdate: 'inputPayment' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > getData().getMaxPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(getData().getMaxPayment());\r\n\t\t}\r\n\r\n\t\tif (value < getData().getMinPayment()) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(getData().getMinPayment());\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { payment: value, onUpdate: 'inputPayment' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-downpayment');\r\n\r\n    noUiSlider.create(slider, {\r\n\t\tstart: getData().paymentPercents * 100,\r\n\t\tconnect: 'lower',\r\n\t\ttooltips: true,\r\n\t\tstep: 1,\r\n\t\trange: {\r\n\t\t\tmin: getData().minPaymentPercents * 100,\r\n\t\t\tmax: getData().maxPaymentPercents * 100,\r\n\t\t},\r\n\t\tformat: wNumb({\r\n\t\t\tdecimals: 0,\r\n\t\t\tthousand: ' ',\r\n\t\t\tsuffix: '',\r\n\t\t}),\r\n\t});\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, { paymentPercents: sliderValue, onUpdate: 'paymentSlider' });\r\n    })\r\n\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import updateModel from '../utils/updateModel.js'\r\n\r\nfunction init(getData) {\r\n    const data = getData();\r\n    const input = document.querySelector('#input-term');\r\n\r\n    const settings = {\r\n\t\tnumeral: true,\r\n\t\tnumeralThousandsGroupStyle: 'thousand',\r\n\t\tdelimiter: ' ',\r\n\t};\r\n\r\n    const cleaveInput = new Cleave(input, settings);\r\n    cleaveInput.setRawValue(data.time);\r\n\r\n    input.addEventListener('input', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\t// Проверка на мин и макс цену\r\n\t\tif (value < data.minYear || value > data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.add('param__details--error');\r\n\t\t}\r\n\r\n\t\tif (value >= data.minYear && value <= data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { time: value, onUpdate: 'inputTime' });\r\n\t})\r\n\r\n    input.addEventListener('change', function () {\r\n\t\tconst value = +cleaveInput.getRawValue();\r\n\r\n\t\tif (value > data.maxYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.maxYear);\r\n\t\t}\r\n\r\n\t\tif (value < data.minYear) {\r\n\t\t\tinput.closest('.param__details').classList.remove('param__details--error');\r\n\t\t\tcleaveInput.setRawValue(data.minYear);\r\n\t\t}\r\n\r\n\t\t// Обновить модель\r\n\t\tupdateModel(input, { time: +cleaveInput.getRawValue(), onUpdate: 'inputTime' });\r\n\t})\r\n\r\n\treturn cleaveInput;\r\n}\r\n\r\nexport default init;","import updateModel from \"../utils/updateModel.js\";\r\n\r\nfunction init(getData) {\r\n    const slider = document.querySelector('#slider-term');\r\n    const data = getData();\r\n\r\n    noUiSlider.create(slider, {\r\n\t\tstart: data.time,\r\n\t\tconnect: 'lower',\r\n\t\ttooltips: true,\r\n\t\tstep: 1,\r\n\t\trange: {\r\n\t\t\tmin: data.minYear,\r\n\t\t\tmax: data.maxYear,\r\n\t\t},\r\n\t\tformat: wNumb({\r\n\t\t\tdecimals: 0,\r\n\t\t\tthousand: ' ',\r\n\t\t\tsuffix: '',\r\n\t\t}),\r\n\t});\r\n\r\n    slider.noUiSlider.on('slide', function () {\r\n\t\t// Get slider value\r\n        let sliderValue = slider.noUiSlider.get();\r\n        sliderValue = sliderValue.split('.')[0];\r\n        sliderValue = parseInt(String(sliderValue).replace(/ /g, ''));\r\n\r\n        updateModel(slider, { time: sliderValue, onUpdate: 'timeSlider' });\r\n    })\r\n\r\n    return slider;\r\n}\r\n\r\nexport default init;","import * as Model from \"./model.js\";\r\nimport updateResultsView from './view/updateResultsView.js';\r\nimport programs from './view/radioPrograms.js'\r\nimport { updateMinPercents } from \"./view/utils.js\";\r\n\r\nimport costInput from './view/costInput.js'\r\nimport costRange from './view/costRange.js'\r\n\r\nimport paymentInput from './view/paymentInput.js';\r\nimport paymentRange from './view/paymentRange.js';\r\n\r\nimport timeInput from './view/timeInput.js';\r\nimport timeRange from './view/timeRange.js';\r\n\r\nwindow.onload = function () {\r\n\tconst getData = Model.getData;\r\n\r\n\t// Init programs\r\n\tprograms(getData);\r\n\r\n\t// Init Cost input\r\n\tconst cleaveCost = costInput(getData);\r\n\tconst sliderCost = costRange(getData);\r\n\r\n\t// Init Payment input\r\n\tconst cleavePayment = paymentInput(getData);\r\n\tconst sliderPayment = paymentRange(getData);\r\n\r\n\t// Time\r\n\tconst cleaveTime = timeInput(getData);\r\n\tconst sliderTime = timeRange(getData);\r\n\r\n\tModel.setData({});\r\n\tconst results = Model.getResults();\r\n\tupdateResultsView(results);\r\n\r\n\tdocument.addEventListener('updateForm', (e) => {\r\n\t\tModel.setData(e.detail);\r\n\r\n\t\tconst data = Model.getData();\r\n\t\tconst results = Model.getResults();\r\n\r\n\t\t// Update all form view based on model\r\n\t\tupdateFormAndSliders(data);\r\n\r\n\t\t// Update results block\r\n\t\tupdateResultsView(results);\r\n\t});\r\n\r\n\tfunction updateFormAndSliders(data) {\r\n\t\t// Update radio btns\r\n\t\tif (data.onUpdate === 'radioProgram') {\r\n\t\t\tupdateMinPercents(data);\r\n\r\n\t\t\t// Update payment slider\r\n\t\t\tsliderPayment.noUiSlider.updateOptions({\r\n\t\t\t\trange: {\r\n\t\t\t\t\tmin: data.minPaymentPercents * 100,\r\n\t\t\t\t\tmax: data.maxPaymentPercents * 100,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// costInput\r\n\t\tif (data.onUpdate !== 'inputCost') {\r\n\t\t\tcleaveCost.setRawValue(data.cost);\r\n\t\t}\r\n\r\n\t\t// costSlider\r\n\t\tif (data.onUpdate !== 'costSlider') {\r\n\t\t\tsliderCost.noUiSlider.set(data.cost);\r\n\t\t}\r\n\r\n\t\t// paymentInput\r\n\t\tif (data.onUpdate !== 'inputPayment') {\r\n\t\t\tcleavePayment.setRawValue(data.payment);\r\n\t\t}\r\n\r\n\t\t// paymentSlider\r\n\t\tif (data.onUpdate !== 'paymentSlider') {\r\n\t\t\tsliderPayment.noUiSlider.set(data.paymentPercents * 100);\r\n\t\t}\r\n\r\n\t\t// timeInput\r\n\t\tif (data.onUpdate !== 'inputTime') {\r\n\t\t\tcleaveTime.setRawValue(data.time);\r\n\t\t}\r\n\r\n\t\t// timeSlider\r\n\t\tif (data.onUpdate !== 'timeSlider') {\r\n\t\t\tsliderTime.noUiSlider.set(data.time);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order Form\r\n    const openFormBtn = document.querySelector('#openFormBtn')\r\n    const orderForm = document.querySelector('#orderForm');\r\n    const submitFormBtn = document.querySelector('#submitFormBtn');\r\n\r\n    openFormBtn.addEventListener('click', function () {\r\n        orderForm.classList.remove('none');\r\n        openFormBtn.classList.add('none')\r\n    })\r\n\r\n    orderForm.addEventListener('submit', function (e) {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Собираем данные с формы перед disable\r\n\t\tconst formData = new FormData(orderForm);\r\n\t\tconsole.log(formData);\r\n\t\tconsole.log(formData.get('name'));\r\n\t\tconsole.log(formData.get('email'));\r\n\t\tconsole.log(formData.get('phone'));\r\n\r\n\t\t// Disable для кнопоки и инпутов\r\n        submitFormBtn.setAttribute('disabled', true);\r\n        submitFormBtn.innerText = 'Заявка отправляется...'\r\n\r\n        orderForm.querySelectorAll('input').forEach(function (input) {\r\n            input.setAttribute('disabled', true);\r\n        })\r\n\r\n        fetchData();\r\n\r\n        async function fetchData() {\r\n\t\t\tconst data = Model.getData();\r\n\t\t\tconst results = Model.getResults();\r\n\r\n\t\t\tlet url = checkOnUrl(document.location.href);\r\n\r\n\t\t\tfunction checkOnUrl(url) {\r\n\t\t\t\tlet urlArrayDot = url.split('.');\r\n\r\n\t\t\t\tif (urlArrayDot[urlArrayDot.length - 1] === 'html') {\r\n\t\t\t\t\turlArrayDot.pop();\r\n\t\t\t\t\tlet newUrl = urlArrayDot.join('.');\r\n\t\t\t\t\tlet urlArraySlash = newUrl.split('/');\r\n\t\t\t\t\turlArraySlash.pop();\r\n\t\t\t\t\tnewUrl = urlArraySlash.join('/') + '/';\r\n\t\t\t\t\treturn newUrl;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn url;\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await fetch(url + 'mail.php', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tform: {\r\n\t\t\t\t\t\tname: formData.get('name'),\r\n\t\t\t\t\t\temail: formData.get('email'),\r\n\t\t\t\t\t\tphone: formData.get('phone'),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tresults,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\r\n\t\t\tconst result = await response.text();\r\n\t\t\tconsole.log(result);\r\n\r\n\t\t\tsubmitFormBtn.removeAttribute('disabled', true);\r\n\t\t\tsubmitFormBtn.innerText = 'Оформить заявку';\r\n\r\n\t\t\torderForm.querySelectorAll('input').forEach((input) => {\r\n\t\t\t\tinput.removeAttribute('disabled', true);\r\n\t\t\t});\r\n\r\n\t\t\t// Очищаем поля формы\r\n\t\t\torderForm.reset();\r\n\t\t\torderForm.classList.add('none');\r\n\r\n\t\t\t// На основе ответа от сервера показываем сообщения об Успехе или Ошибке\r\n\t\t\tif (result === 'SUCCESS') {\r\n\t\t\t\tdocument.getElementById('success').classList.remove('none');\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById('error').classList.remove('none');\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n}"]}